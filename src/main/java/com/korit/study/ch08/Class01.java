package com.korit.study.ch08;


public class Class01 {

    //클래스
    //모양 = 자료형
    //이미 존재하는 값 -> 리터럴값 (정수, 실수,,,)
    //커스텀 자료형 - 생성 : 새로운 자료형을 생성 new ___  => C언어에서의 구조체
    // 생성자 필요 - 함수 형태 - 호출필요
    //클래스명과 생성자 이름은 동일함
    // ex) 학생= new 학생()
    //자료형(클래스) 변수명 = new 자료형(클래스)
    //매개변수, return 자료형 도 가능

    //클래스 필요성 - 관련있는 데이터를 한번에 묶어서 쓰기 위함
    /*
    * 환자={이름, 나이, 병명}
    * 학생={이름, 나이, 학년}
    * 공통 = {이름, 나이} = 사람
    *
    *
    * */

    /*
    * 클래스 - 붕어빵 틀  = 건물 설계도 (구조와 형태를 정의)
    * -객체를 만들기 위한 설계도
    * -여러 개의 객체를 찍어낼 수 있음
    * -속성과 기능을 정의
    *
    * 객체 - 붕어빵 (object/instance)
    * -클래스로부터 만들어진 실체
    * - 각각 고유한 상태 (속성값) 가짐
    * - 메모리에 할당되어 실제 사용됨
    *
    * 객체 = 실제 건물 (object / instance)
    *
    * 객체가 다르면 같은 변수명 사용 가능 (지역변수 재사용 가능)
    * -메모리 주소값이 다르기 때문
    *
    * 클래스의 정의
    * -객체의 상태(데이터)와 행동(기능)을 정의
    * -하나의 클래스로 여러 객체 생성가능
    * JAVA 에서는 class 키워드 사용하여 정의
    *
    * 클래스의 구성요소
    * **속성 (필드 / 변수)
    * 객체와 인스턴스
    * 객체는 클래스를 바탕으로 만들어진 실체
    * 인스턴스는 클래스의 구조대로 메모리에 할당된 객체를 의미
    * 하나의 클래스로 여러개의 객체 생성
    * 각 객체는 서로 독립적, 같은 클래스로 만들어도 다른 데이터 가질 수 있음
    *
    * 객체 생성 과정
    * Car myCar = new Car() => Car 객체 생성
    * 1) 선언 : Car 타입의 myCar 변수 선언
    * 2) 인스턴스화: new 연산자로 Car 클래스의 인스턴스 생성
    * 3) 할당: 생성된 인스턴스를 myCar 변수에 대입
    *
    * 생성된 객체 => 인스턴스
    * */

    /*
    * 클래스 정의
    * class Car {
    *       String model;
    *       String color;
    *       void drive() {...}    drive 함수 정의
    * }*/

    /*
    * 객체 1
    * Car myCar = new Car();
    * myCar.model = "아반뗴"
    * myCar.color = "파랑"
    * */

    /*
    * 객체 2
    * Car yourCar = new Car();
    * yourCar.model = "소나타"
    * yourCar.color = "검정";
    * */






    public static void main(String[] args) {

    }
}
